{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","components/Container/index.jsx","components/Section/index.jsx","components/Notification/index.jsx","components/FeedbackOptions/index.js","components/Statistics/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","Notification","message","FeedbackOptions","good","bad","neutral","feedBack","button","type","name","onClick","Statistics","countTotalFeedback","positivePercentage","list","item","App","state","increaseGood","setState","prevState","increaseNeutral","increaseBad","total","Math","round","this","percent","countPositiveFeedbackPercentage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7310446c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__fQy69\",\"item\":\"Statistics_item__2-jT1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__28mnE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__w6tMO\",\"title\":\"Section_title__34AbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Vs7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2LrLc\"};","import s from './Container.module.css'\r\nfunction Container({ children }) {\r\n    return <div className={s.container}>{children}</div>;\r\n  }\r\n  export default Container;","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({title, children}) {\r\n    return (\r\n        <section className={s.section}>\r\n            <h2 className={s.title}>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n\r\n};\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <p className={s.message}>{message}</p>\r\n    );\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n\r\n};\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = function ({ good, bad, neutral }) {\r\n  return (\r\n    <div className={s.feedBack}>\r\n      <button className={s.button} type=\"button\" name=\"Good\" onClick={good}>\r\n        Good\r\n      </button>\r\n      <button\r\n        className={s.button}\r\n        type=\"button\"\r\n        name=\"neutral\"\r\n        onClick={neutral}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button className={s.button} type=\"button\" name=\"Bad\" onClick={bad}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  good: PropTypes.func.isRequired,\r\n  bad: PropTypes.func.isRequired,\r\n  neutral: PropTypes.func.isRequired,\r\n};\r\n\r\n// const FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n//   <ul className=\"FeedbackOptions\">\r\n//     {options.map(option => (\r\n//       <li className=\"item\">\r\n//         <button onClick={() => onLeaveFeedback(option)}>{option}</button>\r\n//       </li>\r\n//     ))}\r\n//   </ul>\r\n// );\r\n// FeedbackOptions.propTypes = {\r\n//   options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n//   onLeaveFeedback: PropTypes.func.isRequired,\r\n// };\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  countTotalFeedback,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <ul className={s.list}>\r\n      <li className={s.item}>Good: {good}</li>\r\n      <li className={s.item}>Neutral: {neutral}</li>\r\n      <li className={s.item}>Bad: {bad}</li>\r\n      <li className={s.item}>Total: {countTotalFeedback}</li>\r\n      <li className={s.item}>Positive Percentage: {positivePercentage} %</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  countTotalFeedback: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\n\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage(total) {\n    return Math.round((this.state.good * 100) / total);\n  }\n\n  increaseGood = () => {\n    this.setState(prevState => {\n      const good = prevState.good + 1;\n      return { good };\n    });\n  };\n  increaseNeutral = () => {\n    this.setState(prevState => {\n      const neutral = prevState.neutral + 1;\n      return { neutral };\n    });\n  };\n  increaseBad = () => {\n    this.setState(prevState => {\n      const bad = prevState.bad + 1;\n      return { bad };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const percent = this.countPositiveFeedbackPercentage(total);\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            good={this.increaseGood}\n            neutral={this.increaseNeutral}\n            bad={this.increaseBad}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              countTotalFeedback={total}\n              positivePercentage={percent}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}